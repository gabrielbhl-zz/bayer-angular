{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/farmer-search-card/farmer-search-card.component.ts","./src/app/components/farmer-search-card/farmer-search-card.component.html","./src/app/components/farmer-search-card/provider/farmer-search-network-provider.service.ts","./src/app/model/farmer.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Farmer, FARMER_INIT } from './model/farmer';\nimport { FarmerSearchNetworkProviderService } from './components/farmer-search-card/provider/farmer-search-network-provider.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  farmerSelected: Farmer = FARMER_INIT;\n  farmerSearchNetworkProvider: FarmerSearchNetworkProviderService\n\n  constructor(farmerSearchNetworkProvider: FarmerSearchNetworkProviderService) {\n    this.farmerSearchNetworkProvider = farmerSearchNetworkProvider;\n  }\n\n  selectFarmer(farmer: Farmer): void {\n    this.farmerSelected = farmer;\n  }\n\n}\n","<farmer-search-card [farmerSearchAbstractProvider]=\"farmerSearchNetworkProvider\"\n    (onPartnerSelectedEvent)=\"selectFarmer($event)\">\n</farmer-search-card>","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { FarmerSearchCardComponent } from './components/farmer-search-card/farmer-search-card.component';\n\nimport { FarmerSearchNetworkProviderService } from './components/farmer-search-card/provider/farmer-search-network-provider.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FarmerSearchCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatCardModule,\n    MatAutocompleteModule,\n    FlexLayoutModule\n  ],\n  providers: [FarmerSearchNetworkProviderService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FarmerSearchAbstractProvider } from './provider/farmer-search-abstract-provider';\nimport { Farmer, FARMER_INIT } from 'src/app/model/farmer';\n\n@Component({\n  selector: 'farmer-search-card',\n  templateUrl: './farmer-search-card.component.html',\n  styleUrls: ['./farmer-search-card.component.css']\n})\nexport class FarmerSearchCardComponent implements OnInit {\n\n  farmerSelected: Farmer;\n  farmers: Farmer[];\n\n  @Input()\n  farmerSearchAbstractProvider: FarmerSearchAbstractProvider;\n\n  @Output()\n  onPartnerSelectedEvent = new EventEmitter();\n\n  ngOnInit(): void {\n    this.farmerSelected = FARMER_INIT;\n  }\n\n  searchFarmers(text: string): void {\n\n    if (!text) {\n      this.farmers = null;\n      this.farmerSelected = FARMER_INIT;\n      this.setSelectedFarmer(this.farmerSelected);\n    } else {\n\n      this.farmerSearchAbstractProvider.searchFarmers({\n        nameOrDocumentNumber: text\n      }).then((farmers: Farmer[]) => {\n        this.farmers = this._handleSearchResult(farmers);\n      }).catch((error) => {\n        console.log(error);\n      });\n    }\n  }\n\n  _handleSearchResult(farmers: Farmer[]) {\n    return this.farmerSelected?.id ? farmers.filter(farmer => farmer.id != this.farmerSelected.id) : farmers;\n  }\n\n  setSelectedFarmer(farmer: Farmer): void {\n\n    if (this.farmerSelected?.id != farmer.id) {\n      this.farmerSelected = farmer;\n      this.onPartnerSelectedEvent.emit(farmer);\n\n      this.farmers = this._handleSearchResult(this.farmers);\n    }\n\n  }\n\n  getFarmetAddress(): String {\n    var address: String = '';\n\n    if (this.farmerSelected?.address?.street) {\n      address += this.farmerSelected.address.street + ' ';\n    }\n\n    if (this.farmerSelected?.address?.address) {\n      address += this.farmerSelected.address.address + ' ';\n    }\n\n    if (this.farmerSelected?.address?.state) {\n      address += this.farmerSelected.address.state + ' ';\n    }\n\n    if (this.farmerSelected?.address?.country) {\n      address += this.farmerSelected.address.country + ' ';\n    }\n\n    return address ? address.substring(0, address.length - 1) : '';\n  }\n\n}\n","<mat-card>\n\n    <div class=\"container\" fxLayout fxLayout.xs=\"column\" fxLayoutAlign=\"left\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\n        <div fxFlex=\"30%\">\n            <mat-form-field appearance=\"fill\" class=\"full-width\">\n                <mat-label>Nome ou Doc#</mat-label>\n                <input type=\"text\" placeholder=\"\" aria-label=\"Number\" (input)=\"searchFarmers($event.target.value)\"\n                    matInput [matAutocomplete]=\"auto\" [value]=\"farmerSelected.name\" />\n                <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"setSelectedFarmer($event.option.value)\">\n                    <mat-option *ngFor=\"let farmer of farmers\" [value]=\"farmer\">\n                        <b *ngIf=\"farmer?.document?.documentNumber\">{{farmer.document.documentNumber}}:</b> {{farmer.name}}\n                    </mat-option>\n                </mat-autocomplete>\n                <mat-icon matPrefix>search</mat-icon>\n                <mat-icon matSuffix>arrow_forward</mat-icon>\n            </mat-form-field>\n        </div>\n\n        <div fxFlex=\"70%\">\n            <mat-form-field class=\"full-width\">\n                <mat-label>Destinatário</mat-label>\n                <input matInput disabled [value]=\"farmerSelected.name\" />\n            </mat-form-field>\n        </div>\n\n    </div>\n\n    <div class=\"container\" fxLayout fxLayout.xs=\"column\" fxLayoutAlign=\"left\" fxLayoutGap=\"10px\" fxLayoutGap.xs=\"0\">\n        <div fxFlex>\n            <mat-form-field class=\"full-width\">\n                <mat-label>Doc #</mat-label>\n                <input matInput disabled [value]=\"farmerSelected.document.documentNumber\">\n            </mat-form-field>\n        </div>\n\n        <div fxFlex=\"80%\">\n            <mat-form-field class=\"full-width\">\n                <mat-label>Endereço</mat-label>\n                <input matInput disabled [value]=\"getFarmetAddress()\">\n            </mat-form-field>\n        </div>\n    </div>\n</mat-card>\n","import { Injectable } from '@angular/core';\nimport { Farmer } from 'src/app/model/farmer';\nimport { FarmerSearchAbstractProvider, FarmerFilter } from './farmer-search-abstract-provider';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FarmerSearchNetworkProviderService implements FarmerSearchAbstractProvider {\n\n  private farmersUrl: string = `${environment.apiAddress}/farmers`;\n\n  constructor(private http: HttpClient) { }\n\n  searchFarmers(filter: FarmerFilter): Promise<Farmer[]> {\n    let params: HttpParams = new HttpParams();\n    params = params.append('filter', filter.nameOrDocumentNumber);\n\n    return this.http.get<Farmer[]>(this.farmersUrl, { params: params }).toPromise();\n  }\n\n}\n","import { Document } from './document';\nimport { Address } from './address';\n\nexport const FARMER_INIT = {\n    id: \"\",\n    document: {\n        documentNumber: \"\",\n        documentType: \"\"\n    },\n    name: \"\",\n    address: {\n        street: \"\",\n        address: \"\",\n        state: \"\",\n        country: \"\"\n    }\n};\n\nexport interface Farmer {\n\n    id: string;\n    document: Document;\n    name: string;\n    address: Address;\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiAddress: 'http://localhost:8182'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}